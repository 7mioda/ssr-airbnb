{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c9e7da7025a40252b337.hot-update.js","sources":["webpack:///./components/Carousel/Carousel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ids from 'short-id';\r\nimport withStyle from './withStyle';\r\n\r\nconst Carousel = ({\r\n  children,\r\n  itemNumber = 1,\r\n  className,\r\n  time,\r\n  auto,\r\n  indicators,\r\n  defaultIndex,\r\n}) => {\r\n  const [index, setIndex] = useState(defaultIndex || 0);\r\n  const [width, setWidth] = useState(0);\r\n  useEffect(() => {\r\n    if (auto) {\r\n      const timeOut = setTimeout(() => {\r\n        moveToSlide(index + 1);\r\n      }, time || 5000);\r\n      return () => clearTimeout(timeOut);\r\n    }\r\n    return () => undefined;\r\n  }, [auto, index]);\r\n  // Force Component to update while resizing to recalculate width\r\n  useEffect(() => {\r\n    window.addEventListener('resize', () => {\r\n      setIndex(index);\r\n      return () => window.removeEventListener('resize', () => {});\r\n    });\r\n  }, []);\r\n  const moveToSlide = (targetIndex) => {\r\n    if (targetIndex === children.length) {\r\n      setIndex(0);\r\n    } else if (targetIndex < 0) {\r\n      setIndex(children.length - 1);\r\n    } else {\r\n      setIndex(targetIndex);\r\n    }\r\n  };\r\n  const keysAction = ({ keyCode }) => {\r\n    if (keyCode === 39 || keyCode === 37) {\r\n      if (keyCode === 39) {\r\n        moveToSlide(index + 1);\r\n      } else if (keyCode === 37) {\r\n        moveToSlide(index - 1);\r\n      }\r\n    }\r\n  };\r\n  const childrenView = children.map((child) => (\r\n    <li className=\"slide\" key={ids.generate()}>\r\n      {child}\r\n    </li>\r\n  ));\r\n  const indicatorsView = children.map((child, i) => (\r\n    <button\r\n      key={ids.generate()}\r\n      type=\"button\"\r\n      className={`indicator ${index === i ? 'active' : ''}`}\r\n      onClick={() => setIndex(i)}\r\n    />\r\n  ));\r\n  return (\r\n    <div\r\n      className={className}\r\n      data-testid=\"carousel\"\r\n      id=\"carousel\"\r\n      ref={(el) => {\r\n        if (!el) return;\r\n        setWidth(el.getBoundingClientRect().width);\r\n      }}\r\n      onKeyDown={(event) => keysAction(event)}\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        className=\"slide__button slide__button--next\"\r\n        onClick={() => moveToSlide(index + 1)}\r\n      >\r\n        {' '}\r\n        <i className=\"icon-chevron-right\" />{' '}\r\n      </button>\r\n      <ul\r\n        className=\"slide__track\"\r\n        style={{ transform: `translateX(-${index * (width / itemNumber)}px)` }}\r\n      >\r\n        {childrenView}\r\n      </ul>\r\n      <button\r\n        type=\"button\"\r\n        className=\"slide__button slide__button--previous icon-right-arrow\"\r\n        onClick={() => moveToSlide(index - 1)}\r\n      >\r\n        <i className=\"icon-chevron-left\" />{' '}\r\n      </button>\r\n      {indicators && (\r\n        <div className=\"indicator-container\">{indicatorsView}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCarousel.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n  time: PropTypes.number,\r\n  auto: PropTypes.bool,\r\n  indicators: PropTypes.bool,\r\n  defaultIndex: PropTypes.number,\r\n};\r\n\r\nCarousel.defaultProps = {\r\n  time: 5000,\r\n  auto: false,\r\n  indicators: false,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default React.memo(withStyle(Carousel));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AADA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAWA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAGA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;A","sourceRoot":""}